AWSTemplateFormatVersion: 2010-09-09
Description: AWS-ECS-Micropost-RDS
Parameters: 
#環境名
  DbName:
    Type: String
    Default: MicropostRDS
Resources: 
#セキュリティグループ
#EC2セキュリティグループ
  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Securitygroup for EC2
      VpcId: !ImportValue Vpc
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: udp
          FromPort: 53
          ToPort: 53
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name 
          Value: aws-ecs-micropost-ec2 securitygroup
  MicropostToRdsEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: EgressSecuritygroup for MicropostToRds
      GroupId: !Ref Ec2SecurityGroup
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      DestinationSecurityGroupId: !Ref RdsSecurityGroup
#RDSセキュリティグループ
  RdsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Securitygroup for RDS
      VpcId: !ImportValue Vpc
      SecurityGroupEgress:
        - CidrIp: 127.0.0.1/32
          IpProtocol: -1
      Tags: 
        - Key: Name 
          Value: !Sub ${DbName} securitygroup
  MicropostToRdsIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: IngressSecuritygroup for MicropostToRds
      GroupId: !Ref RdsSecurityGroup
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      SourceSecurityGroupId: !Ref Ec2SecurityGroup
#RDS
  RdsSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: subnetgroup for rds
      SubnetIds: 
        - !ImportValue PrivateSubnet1
        - !ImportValue PrivateSubnet2
      Tags: 
        - Key: Name 
          Value: !Sub ${DbName} subnetgroup
  Rds:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 10
      AvailabilityZone: !Sub ${AWS::Region}a
      DBInstanceClass: db.t2.micro
      DBName: !Ref DbName
      DBSubnetGroupName: !Ref RdsSubnetGroup
      Engine: mysql
      EngineVersion: 8.0
      MasterUsername: admin
      MasterUserPassword: '{{resolve:ssm-secure:/micropost/rds/password:1}}' 
      MultiAZ: false
      StorageType: gp2
      Tags: 
        - Key: Name
          Value: !Ref DbName
      VPCSecurityGroups: 
        - !Ref RdsSecurityGroup

Outputs:
  Ec2SecurityGroup:
    Description: The SecurityGroup to use for resouces
    Value: !Ref Ec2SecurityGroup
    Export:
      Name: Ec2SecurityGroup
  RdsEndpoint:
    Description: The RDSEndpoint to use for resouces
    Value: !GetAtt Rds.Endpoint.Address
    Export:
      Name: RdsEndpoint

